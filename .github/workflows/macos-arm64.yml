name: Build macOS (Apple Silicon) DMG

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos-arm64:
    # Use GitHub-hosted macOS runner. Note: hosted macOS runners may be
    # Intel or Apple Silicon depending on availability; check the runner
    # architecture in the logs. If you specifically require Apple Silicon
    # (arm64) you may still need a self-hosted runner.
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Ensure build script is executable
        run: |
          chmod +x windows_packaging/quickbib_macos_packager.py

      - name: Show runner info
        run: |
          echo "sw_vers:"; sw_vers
          echo "uname -m:"; uname -m
          echo "arch:"; arch

      - name: Run macOS packager
        # This script creates a venv, installs deps, runs PyInstaller and
        # creates a compressed DMG using hdiutil. It expects to run on macOS.
        run: |
          python3 windows_packaging/quickbib_macos_packager.py

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: quickbib-macos-dmg
          path: dist_artifacts/*.dmg

      - name: Upload DMG to GitHub Release (only for releases)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: dist_artifacts/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: a hosted-runner variant is possible but may produce an Intel
  # build. If you must use GitHub-hosted runners, consider building a
  # universal2 binary on an Apple Silicon runner or building on a macOS
  # machine and uploading artifacts to GitHub Releases.
